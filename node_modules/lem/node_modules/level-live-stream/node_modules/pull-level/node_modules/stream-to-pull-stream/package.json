{
  "name": "stream-to-pull-stream",
  "description": "convert a stream1 or streams2 stream into a pull-stream",
  "version": "1.3.1",
  "homepage": "https://github.com/dominictarr/stream-to-pull-stream",
  "repository": {
    "type": "git",
    "url": "git://github.com/dominictarr/stream-to-pull-stream.git"
  },
  "dependencies": {
    "pull-core": "~1.0.0"
  },
  "devDependencies": {
    "through": "~2.2.7",
    "tape": "~0.3.3"
  },
  "scripts": {
    "test": "set -e; for t in test/*.js; do node $t; done"
  },
  "author": {
    "name": "Dominic Tarr",
    "email": "dominic.tarr@gmail.com",
    "url": "http://dominictarr.com"
  },
  "license": "MIT",
  "readme": "# stream-to-pull-stream\n\nConvert a classic-stream, or a new-stream into a\n[pull-stream](https://github.com/dominictarr/pull-stream)\n\n## example\n\n``` js\nvar toPullStream = require('stream-to-pull-stream')\nvar pull = require('pull-stream')\n\ntoPullStream(fs.createReadStream(__filename))\n  .pipe(pull.map(function (e) { return e.toString().toUpperCase() }))\n  .pipe(toPullStream(process.stdout))\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/dominictarr/stream-to-pull-stream/issues"
  },
  "_id": "stream-to-pull-stream@1.3.1",
  "_from": "stream-to-pull-stream@1.3"
}
